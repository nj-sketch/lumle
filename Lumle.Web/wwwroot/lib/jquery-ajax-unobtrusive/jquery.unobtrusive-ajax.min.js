/* NUGET: BEGIN LICENSE TEXT
 *
 * Microsoft grants you the right to use these script files for the sole
 * purpose of either: (i) interacting through your browser with the Microsoft
 * website or online service, subject to the applicable licensing or use
 * terms; or (ii) using the files as included with a Microsoft product subject
 * to that product's license terms. Microsoft reserves all other rights to the
 * files not expressly granted by Microsoft, whether by implication, estoppel
 * or otherwise. Insofar as a script file is dual licensed under GPL,
 * Microsoft neither took the code under GPL nor distributes it thereunder but
 * under the terms set out in this paragraph. All notices and licenses
 * below are for informational purposes only.
 *
 * NUGET: END LICENSE TEXT */
/*
** Unobtrusive Ajax support library for jQuery
** Copyright (C) Microsoft Corporation. All rights reserved.
*/
!function (a) { function e(a, b) { for (var c = window, d = (a || "").split(".") ; c && d.length;) c = c[d.shift()]; return "function" == typeof c ? c : (b.push(a), Function.constructor.apply(null, b)) } function f(a) { return "GET" === a || "POST" === a } function g(a, b) { f(b) || a.setRequestHeader("X-HTTP-Method-Override", b) } function h(b, c, d) { var e; d.indexOf("application/x-javascript") === -1 && (e = (b.getAttribute("data-ajax-mode") || "").toUpperCase(), a(b.getAttribute("data-ajax-update")).each(function (b, d) { var f; switch (e) { case "BEFORE": f = d.firstChild, a("<div />").html(c).contents().each(function () { d.insertBefore(this, f) }); break; case "AFTER": a("<div />").html(c).contents().each(function () { d.appendChild(this) }); break; case "REPLACE-WITH": a(d).replaceWith(c); break; default: a(d).html(c) } })) } function i(b, c) { var d, i, j, k, l, m; d = b.getAttribute("data-ajax-confirm"), d && !window.confirm(d) || (i = a(b.getAttribute("data-ajax-loading")), k = parseInt(b.getAttribute("data-ajax-loading-duration"), 10) || 0, l = a(".loading-spinner"), m = a("#auditTable"), a.extend(c, { type: b.getAttribute("data-ajax-method") || void 0, url: b.getAttribute("data-ajax-url") || void 0, cache: "true" === (b.getAttribute("data-ajax-cache") || "").toLowerCase(), beforeSend: function (a) { var c; return g(a, j), c = e(b.getAttribute("data-ajax-begin"), ["xhr"]).apply(b, arguments), c !== !1 && (i.show(k), l.css("display", "block"), m.css("opacity", .5)), c }, complete: function () { i.hide(k), l.css("display", "none"), m.css("opacity", 1), e(b.getAttribute("data-ajax-complete"), ["xhr", "status"]).apply(b, arguments) }, success: function (a, c, d) { h(b, a, d.getResponseHeader("Content-Type") || "text/html"), e(b.getAttribute("data-ajax-success"), ["data", "status", "xhr"]).apply(b, arguments) }, error: function () { e(b.getAttribute("data-ajax-failure"), ["xhr", "status", "error"]).apply(b, arguments) } }), c.data.push({ name: "X-Requested-With", value: "XMLHttpRequest" }), j = c.type.toUpperCase(), f(j) || (c.type = "POST", c.data.push({ name: "X-HTTP-Method-Override", value: j })), a.ajax(c)) } function j(b) { var c = a(b).data(d); return !c || !c.validate || c.validate() } var b = "unobtrusiveAjaxClick", c = "unobtrusiveAjaxClickTarget", d = "unobtrusiveValidation"; a(document).on("click", "a[data-ajax=true]", function (a) { a.preventDefault(), i(this, { url: this.href, type: "GET", data: [] }) }), a(document).on("click", "form[data-ajax=true] input[type=image]", function (c) { var d = c.target.name, e = a(c.target), f = a(e.parents("form")[0]), g = e.offset(); f.data(b, [{ name: d + ".x", value: Math.round(c.pageX - g.left) }, { name: d + ".y", value: Math.round(c.pageY - g.top) }]), setTimeout(function () { f.removeData(b) }, 0) }), a(document).on("click", "form[data-ajax=true] :submit", function (d) { var e = d.currentTarget.name, f = a(d.target), g = a(f.parents("form")[0]); g.data(b, e ? [{ name: e, value: d.currentTarget.value }] : []), g.data(c, f), setTimeout(function () { g.removeData(b), g.removeData(c) }, 0) }), a(document).on("submit", "form[data-ajax=true]", function (d) { var e = a(this).data(b) || [], f = a(this).data(c), g = f && f.hasClass("cancel"); d.preventDefault(), (g || j(this)) && i(this, { url: this.action, type: this.method || "GET", data: e.concat(a(this).serializeArray()) }) }) }(jQuery);
