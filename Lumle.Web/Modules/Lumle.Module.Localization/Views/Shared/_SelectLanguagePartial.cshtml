@using Microsoft.AspNetCore.Localization;
@using Lumle.Module.Localization.Services;
@using Microsoft.AspNetCore.Identity;

@inject ICultureService CultureService
@inject UserManager<User> UserManager


@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();

    var availableCultures = CultureService.GetAllCultureSelectListItem();
    var user = await UserManager.GetUserAsync(User);
    var userCulture = "en-US";

    if (user.Culture!="en-US" && availableCultures.Select(x => x.Value).Contains(user.Culture))
    {
        userCulture = user.Culture;

    }
}

<div>
    <input type="hidden" id="currentCultureName" value="@userCulture" />

    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
        <font color="White"> @Localizer["Language"] (@userCulture)</font>
        <span class="caret"></span>
    </a>
        <ul class="dropdown-menu float-right lang-selector">
            @foreach (var lang in availableCultures)
            {
                if (lang.Value == userCulture)
                {
                    <li><a href="#" data-value="@lang.Value">@lang.Text <span class="glyphicon glyphicon-ok" aria-hidden="true"></span></a></li>
                }
                else
                {
                    <li><a href="#" data-value="@lang.Value">@lang.Text</a></li>
                }
            }

        </ul>
 
    <form  action="~/localization/culture/setlanguage"
          method="post" id="lang-form" role="form">
        <input type="hidden" name="culture" value="@userCulture" />
        <input type="hidden" name="returnUrl" value="~@Context.Request.Path"/>
    </form>
</div>

